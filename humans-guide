# Validator Node Setup Guide for Humans.ai

## Prerequisites

Before you begin, ensure you have the following:

1. **Linux server**: Preferably Ubuntu 20.04 or higher (can also work on other distributions like Debian).
2. **Hardware**: At least 2 CPU cores, 8GB of RAM, and 100GB of SSD storage.
3. **A Wallet**: You need a Humans.ai wallet with some HMT tokens to stake.
4. **Docker**: To run the node in a containerized environment (Docker is highly recommended).

### 1. Install Required Dependencies

Start by installing Docker and Docker Compose. This will allow you to easily deploy the node in a containerized environment.

#### 1.1 Update your system

```bash
sudo apt update && sudo apt upgrade -y
```

#### 1.2 Install Docker

```bash
sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt update
sudo apt install docker-ce -y
sudo systemctl enable docker
sudo systemctl start docker
```

#### 1.3 Install Docker Compose

```bash
sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
```

Verify Docker and Docker Compose installation:

```bash
docker --version
docker-compose --version
```

### 2. Set Up the Validator Node

Humans.ai provides an easy way to run the validator node using Docker. The repository for the validator node contains the configuration files and necessary setup.

#### 2.1 Clone the Validator Node Repository

Clone the official Humans.ai validator node repository to your server:

```bash
git clone https://github.com/humans-ai/validator.git
cd validator
```

#### 2.2 Configure the Validator

Inside the cloned repository, you’ll find a `.env.example` file. You will need to rename this to `.env` and adjust the configuration.

```bash
cp .env.example .env
```

Edit the `.env` file:

```bash
nano .env
```

You will need to set several key parameters, such as:

- **HUMANS_WALLET_PRIVATE_KEY**: Your wallet's private key that will be used to stake tokens.
- **HUMANS_WALLET_ADDRESS**: Your wallet address.
- **STAKED_TOKENS**: The number of HMT tokens you want to stake.
- **NODE_NAME**: A name for your validator node.

Example:

```bash
HUMANS_WALLET_PRIVATE_KEY="your_private_key_here"
HUMANS_WALLET_ADDRESS="your_wallet_address_here"
STAKED_TOKENS=1000000
NODE_NAME="my_validator_node"
```

Make sure that your wallet has sufficient HMT tokens for staking. You can transfer HMT tokens to your wallet address if needed.

#### 2.3 Docker Compose Setup

Humans.ai provides a `docker-compose.yml` file for easy deployment of your validator node.

Check the `docker-compose.yml` file:

```bash
nano docker-compose.yml
```

Ensure that all settings are correctly configured, such as:

- The image for the node.
- The ports to expose.
- Mounting configuration files, logs, and the node's state.

#### 2.4 Start the Validator Node

After setting up everything, you can start the validator node using Docker Compose:

```bash
docker-compose up -d
```

This will download the necessary Docker image and start the node in the background.

#### 2.5 Verify the Node is Running

To check if your validator node is running properly, use the following command:

```bash
docker-compose logs -f
```

Look for logs indicating the node is syncing with the network, processing transactions, and participating in consensus.

### 3. Staking Your Tokens

Once the node is up and running, you can stake your HMT tokens to start validating. To do this, you need to interact with the Humans.ai network.

#### 3.1 Interact with the Blockchain

Use the CLI tools provided by Humans.ai or their blockchain's web interface to stake your tokens. You will be required to send a staking transaction from your wallet to the validator node.

If you are using the CLI, you can run the following command to stake:

```bash
humans-cli stake --amount 1000000 --validator <your_validator_address>
```

### 4. Monitoring the Validator Node

It’s important to monitor your node’s performance and health. Below are some ways you can monitor your validator:

#### 4.1 Checking Docker Logs

To check the status of your node in real-time:

```bash
docker-compose logs -f
```

This will give you real-time logs of your validator’s activity. If your node is syncing with the network and performing validation tasks, you should see logs showing its progress.

#### 4.2 Check Node Sync Status

To check if your node is fully synced with the blockchain, you can query the node’s status via its API. If the node is running, you can check its sync status:

```bash
curl http://localhost:5000/status
```

The status response should give you information about the current block height, syncing progress, and other relevant metrics.

#### 4.3 Check Validator Performance

You can also use the Humans.ai dashboard to monitor your node's performance, staking status, and rewards.

### 5. Updating the Validator Node

To ensure your node is always running the latest version, you should regularly pull the latest Docker image and restart the node.

#### 5.1 Update the Docker Image

To update the image:

```bash
cd validator
git pull origin main
docker-compose down
docker-compose up -d
```

This will pull the latest changes from the repository and restart your node with the new image.

### 6. Troubleshooting

If your validator node is not working as expected, consider the following steps:

- **Check logs**: Review the logs using `docker-compose logs` to understand the issue.
- **Node not syncing**: Ensure your server has a stable internet connection. You can also try restarting the node.
- **Staking issues**: Double-check your private key, wallet address, and ensure you have enough HMT tokens.
